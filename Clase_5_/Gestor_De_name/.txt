let nameArray = [];
const nameSet = new Set();
const nameMap = new MutationObserver();
let currentId = 1;

//Clase para limpiar nombre(Todo en mayusecula)
class FormatData{
    static cleanName (name){
        return name.trim().toUpperCase();
    }
}

//Mostrar notificasiones personalisadas
function showMessage(message, type='info'){
    const notification = document.getElementById('notification');
    notification.textContent = message;
    notification.className = `notification show ${type}`;

    setTimeout(()=>{
        notification.className = 'notification hidden';
    },4000)
}

//Renderizar nombres
function renderList(){
    const list = document.getElementById('nameList');
    list.innerHTML='';
    nameArray.forEach(name=>{
        const div=document.createElement('div');
        div.className = 'item';
        div.textContent=`${nameMap.get(name)}: ${name}`;
        list.appendChild(div);
    })
}

//agregar nombre
function addName(){
    const input = document.getElementById('nameInput');
    const name = FormatData.cleanName(input,value);
    if(!name) return showMessage("Escriba un nombre valido.","error");
    if(nameSet.has(name))return showMessage('Este nombre ya existe.','info');

    nameArray.push(name);
    nameSet.add(name);
    nameMap.set(name,currentId++);
    input.value = '';

    showMessage("El nombre fue agregado correctamente.","success");
    renderList();
}

//Eliminar nombre
function deleteName(){
    const input = document.getElementById('nameInput');
    const name = FormatData.cleanName(input.value);
    if (!nameSet.has(name))return showMessage("Este nombre no esta registrado.", "error");

    nameArray = nameArray.filter(n => n !== name);
    nameSet.delete(name);
    nameMap.delete(name);
    input.value = '';
    showMessage("NOmbre eliminado correctamente.", "success");
    renderList();
}

//Ordenar alfaveticamente
function sortByname(){
    nameArray.sort((a,b)=>a.localCompare(b));
    renderList();
    showMessage("Ordenado por longitud","success");
}

//ordenar por cantidad de letras
function sortBylength(){
    nameArray.sort((a,b)=>a.length - b.length);
    renderList();
    showMessage("Ordenado por longitud","success");
}
//Invierte el orden actual (SEA CUAL SEA EL ORDEN)
function reversedOrden(){
    nameArray.reverse();
    renderList();
    showMessage("lista invertida,","success");
}

//Limpiar todo
function ClearAll(){
    if(!confirm("Â¿Seguro que desea borrar toda la lista?"))return;
    nameArray=[];
    nameSet.clear();
    nameMap.clear();
    currentId=1;
    renderList();
    showMessage("no hay vuelta atras, todo fue borrado","alert");
}

//exportar a CSV
function exportToCSV(){
    if (nameArray.length === 0){
        showMessage("la lista de nombre esta vacia. No se puede exportar.", "info");
        return;
    }
    
    let csvcontent = "ID,Nombre\n";

    nameArray.forEach(name=>{
        const id = nameMap.get(name);
        csvcontent += `${id}, "${name}"\n`
    });
    const blob = new Blob([csvcontent], {type: "text/cvs;charset=utf-8"});

    const url = URL.createObjectURL(blob);
    const link = document.createElement("a");
    link.setAttribute("href",url);
    link.setAttribute("download","lista_nombre.csv");
    document.body.appendChild(link);
    link.click();
    document.body.removeChild(link);

    showMessage("Archivo csv generado excitosamente.","success");
}
